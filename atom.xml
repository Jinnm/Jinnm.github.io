<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Codemoph</title>
  
  <subtitle>Code, design, movie, photograph</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jinnm.github.io/"/>
  <updated>2019-12-30T09:56:13.006Z</updated>
  <id>https://jinnm.github.io/</id>
  
  <author>
    <name>Jinnm</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于UE4的写实头发制作流程</title>
    <link href="https://jinnm.github.io/2019/12/18/UE4HairWorkflow/"/>
    <id>https://jinnm.github.io/2019/12/18/UE4HairWorkflow/</id>
    <published>2019-12-18T05:34:32.000Z</published>
    <updated>2019-12-30T09:56:13.006Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;按照UE4的头发shading
        
      
    
    </summary>
    
    
      <category term="Design" scheme="https://jinnm.github.io/tagsfol/Design/"/>
    
  </entry>
  
  <entry>
    <title>移动端枪击受伤效果(二)</title>
    <link href="https://jinnm.github.io/2019/08/02/MeshTransformation2/"/>
    <id>https://jinnm.github.io/2019/08/02/MeshTransformation2/</id>
    <published>2019-08-02T02:15:08.000Z</published>
    <updated>2019-08-02T02:33:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原本的版本主要有两个很费或是影响低配机效果的地方，一是使用了两次vtf，一次是为了获取终点mesh的顶点法线，对顶点法线也做morgh，一次是为了获取射击点。二是shader会不停的遍历所有的射击点计算距离，对于旧的射击点，很多计算是重复的。&lt;/p&gt;&lt;h3
        
      
    
    </summary>
    
    
      <category term="Shader" scheme="https://jinnm.github.io/tagsfol/Shader/"/>
    
  </entry>
  
  <entry>
    <title>移动端枪击受伤效果(一)</title>
    <link href="https://jinnm.github.io/2019/07/27/MeshTransformation/"/>
    <id>https://jinnm.github.io/2019/07/27/MeshTransformation/</id>
    <published>2019-07-27T13:04:08.000Z</published>
    <updated>2019-08-02T02:17:37.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;参考了这个&lt;a href=&quot;https://assetstore.unity.com/packages/tools/animation/mesh-transformation-120144&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
      <category term="Shader" scheme="https://jinnm.github.io/tagsfol/Shader/"/>
    
  </entry>
  
  <entry>
    <title>UE4移动端卡通渲染</title>
    <link href="https://jinnm.github.io/2019/07/06/shader6/"/>
    <id>https://jinnm.github.io/2019/07/06/shader6/</id>
    <published>2019-07-06T02:38:20.000Z</published>
    <updated>2019-07-06T03:36:01.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h3&gt;&lt;p&gt;最近学习UE4，尝试改UE4引擎，做一个卡通渲染的shading
        
      
    
    </summary>
    
    
      <category term="Shader" scheme="https://jinnm.github.io/tagsfol/Shader/"/>
    
  </entry>
  
  <entry>
    <title>简易IBL渲染</title>
    <link href="https://jinnm.github.io/2019/06/22/shader5/"/>
    <id>https://jinnm.github.io/2019/06/22/shader5/</id>
    <published>2019-06-22T06:32:38.000Z</published>
    <updated>2019-06-22T07:09:42.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;通过一个Cubemap，使用IBL可以渲染出非常接近Unity Standard Shader的效果。常用DCC工具中实时渲染效果最好的大概是Substance
        
      
    
    </summary>
    
    
      <category term="Shader" scheme="https://jinnm.github.io/tagsfol/Shader/"/>
    
  </entry>
  
  <entry>
    <title>卡通渲染尝试</title>
    <link href="https://jinnm.github.io/2019/06/14/shader4/"/>
    <id>https://jinnm.github.io/2019/06/14/shader4/</id>
    <published>2019-06-13T16:00:46.000Z</published>
    <updated>2019-08-05T09:23:40.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;（保密原因省略了一些截图）&lt;/p&gt;&lt;h3 id=&quot;参考图分析&quot;&gt;&lt;a href=&quot;#参考图分析&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="Shader" scheme="https://jinnm.github.io/tagsfol/Shader/"/>
    
  </entry>
  
  <entry>
    <title>摄影 || 破晓时分</title>
    <link href="https://jinnm.github.io/2019/06/03/photo5/"/>
    <id>https://jinnm.github.io/2019/06/03/photo5/</id>
    <published>2019-06-03T14:32:35.000Z</published>
    <updated>2019-06-09T05:13:14.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;五一节和室友兴奋地计划去宝石山蛤蟆峰看日出，当天四点钟爬起来（令人惊讶的是，四点钟起床比七点半起床轻松许多……）出了校门后，三个人越走越兴奋，一路小跑起来，走到宝石山最近的一个入口时就直接用高德地图导航去蛤蟆峰。&lt;/p&gt;&lt;p&gt;事实证明，这是个错误的决定。&lt;/p&gt;&lt;p&gt;我们三
        
      
    
    </summary>
    
    
      <category term="Photography" scheme="https://jinnm.github.io/tagsfol/Photography/"/>
    
  </entry>
  
  <entry>
    <title>我的「利器」</title>
    <link href="https://jinnm.github.io/2019/05/31/Liqi/"/>
    <id>https://jinnm.github.io/2019/05/31/Liqi/</id>
    <published>2019-05-31T02:06:06.000Z</published>
    <updated>2019-05-31T04:53:47.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;偶然看到了&lt;a href=&quot;https://liqi.io/community/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
      <category term="other" scheme="https://jinnm.github.io/tagsfol/other/"/>
    
  </entry>
  
  <entry>
    <title>Gamma校正</title>
    <link href="https://jinnm.github.io/2019/05/30/GammaCorrection/"/>
    <id>https://jinnm.github.io/2019/05/30/GammaCorrection/</id>
    <published>2019-05-30T07:22:06.000Z</published>
    <updated>2019-05-31T09:48:11.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="Shader" scheme="https://jinnm.github.io/tagsfol/Shader/"/>
    
  </entry>
  
  <entry>
    <title>Unity Shader转SP</title>
    <link href="https://jinnm.github.io/2019/05/29/Unity2SP/"/>
    <id>https://jinnm.github.io/2019/05/29/Unity2SP/</id>
    <published>2019-05-29T10:59:42.000Z</published>
    <updated>2019-06-24T15:58:16.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;前段时间研究了一下怎么把Unity的shader搬到SP，原因是：美术在SP中制作贴图，生成的美术资源放进Unity之后就完全是另一个样子了，来回修改非常麻烦。所以希望SP中就显示引擎里的效果。&lt;/p&gt;&lt;p&gt;我这方面是小白，所以把自己探索的过程也记录进去了。&lt;/p&gt;&lt;p&gt;首
        
      
    
    </summary>
    
    
      <category term="Shader" scheme="https://jinnm.github.io/tagsfol/Shader/"/>
    
  </entry>
  
  <entry>
    <title>美术流程踩坑</title>
    <link href="https://jinnm.github.io/2019/04/23/ArtPipeline/"/>
    <id>https://jinnm.github.io/2019/04/23/ArtPipeline/</id>
    <published>2019-04-23T08:50:57.000Z</published>
    <updated>2019-06-22T07:39:58.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;从0开始做了一个角色，流程是&lt;br&gt;Maya低模 -&amp;gt; ZBrush高模 -&amp;gt; Topogun拓扑 -&amp;gt; Maya展UV -&amp;gt; SP画贴图 -&amp;gt;
        
      
    
    </summary>
    
    
      <category term="Design" scheme="https://jinnm.github.io/tagsfol/Design/"/>
    
  </entry>
  
  <entry>
    <title>摄影 || 胶片X夜景</title>
    <link href="https://jinnm.github.io/2019/03/30/photo4/"/>
    <id>https://jinnm.github.io/2019/03/30/photo4/</id>
    <published>2019-03-30T11:59:25.000Z</published>
    <updated>2019-06-14T15:50:34.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;手持傻瓜胶片机拍夜景，想想就很崩啊……不过还是想尝试下，了解一下自己的相机&lt;br&gt;&lt;img src=&quot;http://ws3.sinaimg.cn/large/006tKfTcly1g1l3ls2tqaj31930u04qs.jpg&quot; alt&gt;&lt;br&gt;&lt;img
        
      
    
    </summary>
    
    
      <category term="Photography" scheme="https://jinnm.github.io/tagsfol/Photography/"/>
    
  </entry>
  
  <entry>
    <title>摄影 || DX Code是什么</title>
    <link href="https://jinnm.github.io/2019/03/25/photo3/"/>
    <id>https://jinnm.github.io/2019/03/25/photo3/</id>
    <published>2019-03-25T15:40:39.000Z</published>
    <updated>2019-05-30T02:53:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;我有两台胶片机，一台是全手动的Olympus om1，还有一台是傻瓜式的Konica
        
      
    
    </summary>
    
    
      <category term="Photography" scheme="https://jinnm.github.io/tagsfol/Photography/"/>
    
  </entry>
  
  <entry>
    <title>Wireframe without Geometry Shader</title>
    <link href="https://jinnm.github.io/2019/03/24/shader3/"/>
    <id>https://jinnm.github.io/2019/03/24/shader3/</id>
    <published>2019-03-24T07:37:52.000Z</published>
    <updated>2019-06-24T15:38:50.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这篇来讨论一下渲染线框的方法，目前知道的方法有&lt;br&gt;1、在贴图上画&lt;br&gt;2、把线框的模型建出来&lt;br&gt;3、使用geometry shader计算&lt;br&gt;4、使用图形接口的fill
        
      
    
    </summary>
    
    
      <category term="Shader" scheme="https://jinnm.github.io/tagsfol/Shader/"/>
    
  </entry>
  
  <entry>
    <title>描边shader再探讨</title>
    <link href="https://jinnm.github.io/2019/03/12/shader2/"/>
    <id>https://jinnm.github.io/2019/03/12/shader2/</id>
    <published>2019-03-12T13:10:50.000Z</published>
    <updated>2019-06-09T10:35:16.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;之前的一篇描边shader只是讲了实现的大致思路，但是实际去实现一个普通的角色描边shader的话，会发现很多很多的问题……&lt;/p&gt;&lt;p&gt;普通的描边感觉比较好也比较常用的方式是用两个pass，底下那层在屏幕空间沿法线外扩，且剔除正面，上面那层用普通的。&lt;br&gt;但是真的使用起
        
      
    
    </summary>
    
    
      <category term="Shader" scheme="https://jinnm.github.io/tagsfol/Shader/"/>
    
  </entry>
  
  <entry>
    <title>描边Shader</title>
    <link href="https://jinnm.github.io/2018/12/14/shader1/"/>
    <id>https://jinnm.github.io/2018/12/14/shader1/</id>
    <published>2018-12-14T03:08:49.000Z</published>
    <updated>2019-05-30T07:14:21.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;写一个使3D物体带描边的shader是基于GPU的渲染的一项作业，关于这个作业有一些思考。&lt;/p&gt;&lt;p&gt;描边shader有很多种写法，最常见最通用的是法线外拓的方法，就是用两个pass，第一个pass渲染红色的放大版模型（之后用A
        
      
    
    </summary>
    
    
      <category term="Shader" scheme="https://jinnm.github.io/tagsfol/Shader/"/>
    
  </entry>
  
  <entry>
    <title>Code, design, movie and photography</title>
    <link href="https://jinnm.github.io/2018/11/06/title/"/>
    <id>https://jinnm.github.io/2018/11/06/title/</id>
    <published>2018-11-06T02:03:16.000Z</published>
    <updated>2018-11-06T02:59:31.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Codemoph = Code, Design, Movie,
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>游戏运营讲座</title>
    <link href="https://jinnm.github.io/2018/11/04/youce2/"/>
    <id>https://jinnm.github.io/2018/11/04/youce2/</id>
    <published>2018-11-04T13:25:29.000Z</published>
    <updated>2019-05-30T07:14:06.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;虽然以后肯定做技术，不过今天去听了腾讯某游戏运营负责人的讲座，感觉收获颇多。（我好像是觉得什么都很有趣的体质？）由于今天讲的内容感觉太太太难接触到了，所以一定要把它记下来，可惜当时讲座要求手机关机而且没带电脑，我现在只能凭借记忆补全内容，有些做法以及原因想不太起来了QAQ。
        
      
    
    </summary>
    
    
      <category term="other" scheme="https://jinnm.github.io/tagsfol/other/"/>
    
  </entry>
  
  <entry>
    <title>游戏策划基础</title>
    <link href="https://jinnm.github.io/2018/11/03/youce/"/>
    <id>https://jinnm.github.io/2018/11/03/youce/</id>
    <published>2018-11-03T09:45:32.000Z</published>
    <updated>2019-05-30T07:14:22.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;作业题目&quot;&gt;&lt;a href=&quot;#作业题目&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="other" scheme="https://jinnm.github.io/tagsfol/other/"/>
    
  </entry>
  
  <entry>
    <title>摄影 || 第二卷</title>
    <link href="https://jinnm.github.io/2018/10/28/photo2/"/>
    <id>https://jinnm.github.io/2018/10/28/photo2/</id>
    <published>2018-10-28T13:29:40.000Z</published>
    <updated>2019-06-14T15:51:59.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Olympus om-1&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://ws2.sinaimg.cn/large/006tNbRwly1fwo9wtchiij31kw11vx6q.jpg&quot; alt&gt;&lt;br&gt;&lt;img
        
      
    
    </summary>
    
    
      <category term="Photography" scheme="https://jinnm.github.io/tagsfol/Photography/"/>
    
  </entry>
  
</feed>
